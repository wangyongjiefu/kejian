{"./":{"url":"./","title":"Introduction","keywords":"","body":"Vue.js进阶学习 Vue.js进阶学习课程，以命令行的方式开发您的应用程序。 课程详细 课程介绍 命令行安装 各种项目模板 webpack模板工程 引入Bootstrap4 使用Ajax库-axios 自定义css样式 组件的结构 工程的结构 路由知我心 路由初体验 动态路由 嵌套路由 路由也编程 多路由拼图 URL重定向 多参数路由 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com 2018/10/10 Vue.js 3.0 发布计划 https://www.bilibili.com/video/av33031932 Per.js - Vue.js的一个新对手 https://www.bilibili.com/video/av33501775 Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson01/":{"url":"Lesson01/","title":"1.课程介绍","keywords":"","body":"Vue.js进阶开讲 概要 Vue.js是一套用于构建用户界面的渐进式框架。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。 类似框架 Angular React etc. 官方网站 https://cn.vuejs.org/ 使用版本 v2.5.x 进阶课程范围 cli:vue.js命令行方式的使用和开发 vue-router:路由框架 vuex:状态管理 transition:动画效果 etc. 基础知识 Javascript/ES6 HTML5/CSS3 小马Vue.js入门课程第一季 http://komavideo.com/vuejs/index.html 开发工具 记事本等文本编辑器 Visual Studio Code(推荐) Brackets ATOM 浏览器 Chrome(推荐) FireFox IE/edge Safari 视频计划 每个视频只包括一个知识点，并控制在5-10分钟之内 原代码共享 Git@OSChttps://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson02/":{"url":"Lesson02/","title":"2.命令行安装","keywords":"","body":"命令行安装 知识点 vue命令工具安装 官网 https://github.com/vuejs/vue-cli 实战演习 #最新版本确认 $ npm show vue-cli $ [sudo] npm install -g vue-cli@2.9.3 #安装版本确认 $ vue -V #命令帮助 $ vue -h vue-cli命令选项 init list build help [cmd] $ vue help init 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson03/":{"url":"Lesson03/","title":"3.各种项目模板","keywords":"","body":"各种项目模板 知识点 vue命令默认提供的各种模板 实战演习 $ vue help $ vue list browserify - A full-featured Browserify + vueify setup with hot-reload, linting & unit testing. browserify-simple - A simple Browserify + vueify setup for quick prototyping. pwa - PWA template for vue-cli based on the webpack template simple - The simplest possible Vue setup in a single HTML file webpack - A full-featured Webpack + vue-loader setup with hot reload, linting, testing & css extraction. webpack-simple - A simple Webpack + vue-loader setup for quick prototyping. 模板官网 https://github.com/vuejs-templates 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson04/":{"url":"Lesson04/","title":"4.webpack模板工程","keywords":"","body":"webpack模板工程 知识点 建立webpack模板工程 官网 http://vuejs-templates.github.io/webpack/ 实战演习 $ vue init webpack myweb $ cd myweb $ npm run dev $ npm run build $ code . webpack工程 src:源文件文件夹 dist:打包文件夹 package.json:项目设置文件 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson05/":{"url":"Lesson05/","title":"5.引入Bootstrap4","keywords":"","body":"引入Bootstrap4 知识点 vue-webpack工程导入bootstrap4框架 实战演习 $ cd myweb $ npm install bootstrap --save --save-exact $ nano main.js ... import 'bootstrap/dist/css/bootstrap.min.css' ... #编辑视图文件，测试Bootstrap功能 $ cd src $ nano App.vue ... 确定 使用 注意 ... $ npm start 【可选】Bootstrap + Vue https://bootstrap-vue.js.org/ 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson06/":{"url":"Lesson06/","title":"6.使用Ajax库-axios","keywords":"","body":"使用Ajax库-axios 知识点 为网页增加远程数据存取能力（Ajax） HTTP库axios（浏览器 or Node.js） axios:Promise based HTTP client for the browser and node.js https://github.com/axios/axios 实战演习 $ cd myweb $ npm install --save --save-exact axios vue-axios #注册组件 $ nano main.js ... import axios from 'axios' import VueAxios from 'vue-axios' Vue.use(VueAxios, axios) ... #各个组件 $ nano HelloWorld.vue ... {{content}} ... export default { name: \"HelloWorld\", data() { return { content: \"\" }; }, mounted() { this.axios.post(\"http://api.komavideo.com/news/list\").then(body => { this.content = body.data; }); } }; ... VS Code workspace setting 纠正VSCode-vetur插件的4空格格式化问题 { \"prettier.tabWidth\": 4 } 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson07/":{"url":"Lesson07/","title":"7.自定义css样式","keywords":"","body":"自定义css样式 知识点 定义属于自己的样式单文件my.css 实战演习 $ cd assets $ nano my.css ... .myclass1 { color: red; border: 1px solid blue; } ... $ cd ../ $ nano App.vue ... #这里必须是该文件对于my.css的相对路径 import './assets/my.css' ... 你好！ ... 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson08/":{"url":"Lesson08/","title":"8.组件的结构","keywords":"","body":"组件的结构 知识点 vue命令行开发模式为我们带来的组件开发方式。 组件文件夹 所有的组件都被统一放在工程中的组件文件夹中。 {myproject}/src/components/* 组件格式 template:组件html内容 script:组件js脚本(ES6) style:组件css样式单 实战演习 {{ msg }} // import ... export default { name: 'HelloWorld', data () { return { msg: 'Welcome to Your Vue.js App' } } } h1 { font-weight: normal; color: red; } 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson09/":{"url":"Lesson09/","title":"9.工程的结构","keywords":"","body":"工程的结构 知识点 webpack模板生成的工程结构 官网 http://vuejs-templates.github.io/webpack/ webpack模板工程 build webpack设置文件 config 工程设置文件 src 源文件夹 static 静态文件夹(编译时直接拷贝至发布文件夹) index.html 网页启动入口文件 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson10/":{"url":"Lesson10/","title":"10.路由知我心","keywords":"","body":"路由知我心 知识点 路由组件vue-router 官网 https://router.vuejs.org/zh-cn/ https://github.com/vuejs/vue-router 实战演习 $ npm install vue-router --save --save-exact 路由组件的设定 src/router/index.js import Vue from 'vue' import Router from 'vue-router' import HelloWorld from '@/components/HelloWorld' Vue.use(Router) export default new Router({ routes: [ { path: '/', name: 'HelloWorld', component: HelloWorld } ] }) src/main.js import router from './router' ... new Vue({ el: '#app', router, components: { App }, template: '' }) 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson11/":{"url":"Lesson11/","title":"11.路由初体验","keywords":"","body":"路由初体验 知识点 做一个简单的路由 实战演习 HelloWorld.vue News.vue About.vue router/index.js App.vue HelloWorld.vue Hello World! News.vue News Page About.vue About Page router/index.js import About from '@/components/About' import News from '@/components/News' ... { path: '/', name: 'HelloWorld', component: HelloWorld }, { path: '/about', name: 'About', component: About }, { path: '/news', name: 'News', component: News } App.vue 默认会被渲染成一个 `` 标签 --> Home 新闻 关于 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson12/":{"url":"Lesson12/","title":"12.动态路由","keywords":"","body":"动态路由 知识点 动态路由是指在URL路径中含有动态参数的路由，比如说：/player/1, /player/2, /player/3等等。 动态路由的匹配设置 实战演习 定制玩家的动态路径：/player/:id Player.vue router/index.js App.vue Player.vue 球员页面 {{ detail }} export default { name: \"Player\", data() { return { detail: {} }; }, mounted() { // 接受url参数id this.detail = this.getPlayer(this.$route.params.uid); }, /* beforeRouteUpdate(to, from, next) { this.detail = this.getPlayer(to.params.uid); next(); }, */ methods: { getPlayer(uid) { switch (uid) { case '1': return {uid: 1,name: '库里',point: 26}; case '2': return {uid: 2,name: '哈登',point: 30}; default: return {uid: -1}; } } } }; router/index.js ... import Player from '@/components/Player' ... export default new Router({ routes: [ { path: '/player/:uid', name: 'Player', component: Player } ] }) App.vue Home 库里 哈登 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson13/":{"url":"Lesson13/","title":"13.嵌套路由","keywords":"","body":"嵌套路由 知识点 嵌套路由是指在动态路由的基础上再加上附加的嵌套URL（即：组件），比如说：(/player/:uid/*)/player/1/profile, /player/1/stats等。 嵌套路由的使用方法 实战演习 Player/Profile.vue Player/Stats.vue router/index.js Player.vue Player/Profile.vue 球员简介:{{$route.params.uid}} Player/Stats.vue 球员数据:{{$route.params.uid}} router/index.js import PlayerProfile from '@/components/Player/Profile' import PlayerStats from '@/components/Player/Stats' ... { path: '/player/:uid', name: 'Player', component: Player, children: [ { path: 'profile', component: PlayerProfile }, { path: 'stats', component: PlayerStats }, ] } Player.vue 球员页面 编号：{{detail.uid}} 名字：{{detail.name}} 得分：{{detail.point}} 简介 数据 ... ... data() { return { detail: {}, profile: '', stats: '', }; }, mounted() { this.detail = this.getPlayer(this.$route.params.uid); this.profile = '/player/' + this.$route.params.uid + '/profile'; this.stats = '/player/' + this.$route.params.uid + '/stats'; }, beforeRouteUpdate(to, from, next) { this.detail = this.getPlayer(to.params.uid); this.profile = '/player/' + to.params.uid + '/profile'; this.stats = '/player/' + to.params.uid + '/stats'; next(); }, ... 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson14/":{"url":"Lesson14/","title":"14.路由也编程","keywords":"","body":"路由也编程 知识点 在前面的讲解中我是通过router-link标记来生成页面的a标记，然后进行url转向的，其实我们不仅可以通过标记来实现，还可以通过编程的方式来实现，今天我们就来学习一下。 router-link(之前做法) router.push(location, onComplete?, onAbort?) 实战演习 App.vue ... 库里 哈登 库里 哈登 ... ... methods: { btnClick(uid) { this.$router.push({ path: `/player/${uid}` }); //this.$router.push({ path: `/player/${uid}/stats` }); //this.$router.push({ name: 'Player', params: { uid: uid } }); //this.$router.push({ path: '/player', query: { uid: uid }}); //url-get参数写法 //url履历控制 //this.$router.go(-1); } } ... 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Vue.js基础讲解 http://komavideo.com/vuejs/index.html Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson15/":{"url":"Lesson15/","title":"15.多路由拼图","keywords":"","body":"多路由拼图 知识点 为一个路由(画面)组合多个组件，完成整个页面。 router-view[name] components 实战演习 Header.vue Sidebar.vue Detail.vue router/index.js App.vue setting/Header.vue 标题栏 欢迎来到小马Vue.js课程系列 setting/Sidebar.vue 边条 setting/Detail.vue 详细显示 Vue.js是一套用于构建用户界面的渐进式框架。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。 router/index.js import SettingDetail from '@/components/setting/Detail' import SettingHeader from '@/components/setting/Header' import SettingSidebar from '@/components/setting/Sidebar' ... routes: [ { path: '/', name: 'Home', components: { myHeader: SettingHeader, mySidebar: SettingSidebar, myDetail: SettingDetail } } ] App.vue 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson16/":{"url":"Lesson16/","title":"16.URL重定向","keywords":"","body":"URL重定向 知识点 重定向指令：redirect 路由别名：alias 实战演习 About.vue router/index.js App.vue About.vue About Page router/index.js import About from '@/components/About' ... { path: '/about', name: 'About', component: About, alias: '/aboutme' }, { path: '/curry', redirect: '/player/1' //redirect: { name: 'About' } //redirect: '/about' } App.vue Home About Player1 Curry 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "},"Lesson17/":{"url":"Lesson17/","title":"17.多参数路由","keywords":"","body":"多参数路由 知识点 路由属性props 实战演习 User.vue router/index.js App.vue User.vue User uid={{ uid }}, {{ nationality }} $route.params.uid={{ $route.params.uid }} $route.params.uid={{ $route.params.nationality }} export default { name: \"User\", props: ['uid', 'nationality'] }; router/index.js import User from '@/components/User' ... { path: '/', name: 'Home', component: Home }, { path: '/user/:uid/:nationality', name: 'User', component: User, props: true }, ... App.vue Home User1 User2 User3 课程文件 https://gitee.com/komavideo/LearnVueJS2 小马视频频道 http://komavideo.com Copyright © www.itheima.com/javase 2021 all right reserved，powered by Gitbook该文件修订时间： 2018-10-10 21:34:33 "}}